import { useRef, useState } from "react";

import { createPortal } from "react-dom";
import { useOnClickOutside } from "usehooks-ts";

import Icon from "shared/components/icon/Icon";

const ListingDropdown = ({ handaleDelete }: { handaleDelete: () => void }) => {
  const [open, setOpen] = useState<boolean>(false);
  const [step, setStep] = useState<boolean>(false);
  const [stepObj, setStepObj] = useState<DropdownDataProps | null>(null);

  const ref = useRef<HTMLDivElement | null>(null);

  const [position, setPosition] = useState<{ top: number }>({ top: 0 });

  useOnClickOutside(ref, () => setOpen(false));

  const handleDropdDownClick = () => {
    setOpen(!open);
    if (ref && "current" in ref && ref.current) {
      const { top, height } = ref.current.getBoundingClientRect();
      setPosition({ top: top + height + 4 });
    }
  };

  interface DropdownDataProps {
    icon: string;
    title: string;
    function?: () => void;
    Component?: JSX.Element;
  }
  const nextStep = () => {
    setStep(!step);
  };

  const listingDropDownData: DropdownDataProps[] = [
    {
      icon: "status",
      title: "Change Status",
      function: () => nextStep(),
      Component: (
        <ul className="next_step_dropdown">
          <li>
            <span className="w-3 h-3 rounded-full bg-dodgerblue"></span>
            <h5>Onboarding</h5>
          </li>
          <li>
            <span className="w-3 h-3 rounded-full bg-dodgerblue"></span>
            <h5>In Due Diligence</h5>
          </li>
          <li>
            <span className="w-3 h-3 rounded-full bg-dodgerblue"></span>
            <h5>In Negotiation</h5>
          </li>
        </ul>
      ),
    },
    {
      icon: "square",
      title: "Change Business Criticality",
      function: () => nextStep(),
      Component: (
        <ul className="next_step_dropdown">
          <li>
            <span className="w-3 h-3 rounded-full bg-dodgerblue"></span>
            <h5>Onboarding</h5>
          </li>
        </ul>
      ),
    },
    {
      icon: "user",
      title: "Change Owner",
      function: () => nextStep(),
    },
    {
      icon: "arrow-right",
      title: "Export",
      function: () => nextStep(),
    },
    {
      icon: "star",
      title: "Favorite",
      function: () => nextStep(),
    },
    {
      icon: "user-plus",
      title: "Share",
      function: () => nextStep(),
    },
    {
      icon: "trash-new",
      title: "Delete",
      function: () => handaleDelete(),
    },
  ];

  return (
    <div className="listing_dropdown" ref={ref}>
      <button
        className="listing_button"
        aria-label="Customise options"
        onClick={handleDropdDownClick}
      >
        <Icon type="ellipsis-vertical" fill={true} size="icon-smd" />
      </button>
      {open &&
        createPortal(
          <div
            className="listing_dropdown_wrapper"
            style={{
              position: "absolute",
              top: position.top,
              right: "24px",
            }}
          >
            {!step && (
              <div>
                <ul>
                  {listingDropDownData.map((ele: DropdownDataProps, index: number) => (
                    <li key={index}>
                      <button
                        onClick={() => {
                          if (ele?.function) {
                            ele?.function();
                          }
                          setStepObj(ele);
                        }}
                      >
                        <span>
                          <Icon
                            type={ele.icon}
                            fill={true}
                            size="icon-sm"
                            className="table_circle_icon"
                          />
                        </span>
                        <span>{ele.title}</span>
                      </button>
                    </li>
                  ))}
                </ul>
              </div>
            )}
            {step && (
              <div>
                <div className="flex items-center gap-1.5 text-sm px-2 py-1 mb-1">
                  <button
                    onClick={() => {
                      setStepObj(null);
                      setStep(!step);
                    }}
                  >
                    <Icon type="left" fill={false} size="icon-xs" className="back_arrow" />
                  </button>
                  <span className="text-santagrey">Change Status</span>
                </div>
                {stepObj?.Component}

                {/* <ul className="next_step_dropdown">
                  <li>
                    <span className="w-3 h-3 rounded-full bg-dodgerblue"></span>
                    <h5>Onboarding</h5>
                  </li>

                  <li>
                    <span className="w-3 h-3 rounded-full bg-dodgerblue"></span>
                    <h5>In Due Diligence</h5>
                  </li>

                  <li>
                    <span className="w-3 h-3 rounded-full bg-dodgerblue"></span>
                    <h5>In Negotiation</h5>
                  </li>
                </ul> */}
              </div>
            )}
          </div>,
          document.body
        )}
    </div>
  );
};

export default ListingDropdown;
